# -*- coding: utf-8 -*-
###############################################################################
# Copyright (c), Forschungszentrum JÃ¼lich GmbH, IAS-1/PGI-1, Germany.         #
#                All rights reserved.                                         #
# This file is part of the AiiDA-SPEX package.                               #
#                                                                             #
# The code is hosted on GitHub at https://github.com/JuDFTteam/aiida-spex     #
# For further information on the license, see the LICENSE.txt file            #
# For further information please visit http://www.flapw.de or                 #
###############################################################################

"""
This module contains the parser for a spex calculation and methods for
parsing different files produced by inpgen.
"""
from aiida.parsers import Parser
from aiida.common.exceptions import NotExistent
from aiida_spex.calculations.spex import SpexCalculation


class SpexParser(Parser):
    def __init__(self, node):
        """
        Initialize the instance of SpexParser
        """
        super().__init__(node)

        # these files should be at least present after success of inpgen
        self._default_files = {SpexCalculation._OUTPUT_FILE_NAME, SpexCalculation._INPXML_FILE_NAME}
        self._other_files = {SpexCalculation._OUTPUT_FILE_NAME}

    def parse(self, **kwargs):
        """
        Takes spex.out generated by SPEX calculation and created data node.

        :return: a dictionary of AiiDA nodes to be stored in the database.
        """

        try:
            output_folder = self.retrieved
        except NotExistent:
            self.logger.error('No retrieved folder found')
            return self.exit_codes.ERROR_NO_RETRIEVED_FOLDER

        # check what is inside the folder
        list_of_files = output_folder.list_object_names()
        self.logger.info('file list {}'.format(list_of_files))

        self.logger.info('SpexData initialized')
        # self.out('fleurinspData', fleurinp)



